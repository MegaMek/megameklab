MovementMode.NONE=None
MovementMode.BIPED=Biped
MovementMode.TRIPOD=Tripod
MovementMode.QUAD=Quad
MovementMode.TRACKED=Tracked
MovementMode.WHEELED=Wheeled
MovementMode.HOVER=Hover
MovementMode.VTOL=VTOL
MovementMode.NAVAL=Naval Displacement
MovementMode.HYDROFOIL=Hydrofoil
MovementMode.SUBMARINE=Submarine
MovementMode.INF_LEG=Foot
MovementMode.INF_MOTORIZED=Motorized
MovementMode.INF_JUMP=Jump
MovementMode.BIPED_SWIM=UMU
MovementMode.QUAD_SWIM=UMU
MovementMode.WIGE=WiGE
MovementMode.AERODYNE=Aerodyne
MovementMode.SPHEROID=Spheroid
MovementMode.INF_UMU=UMU
MovementMode.AEROSPACE=Aerospace
MovementMode.RAIL=Rail
MovementMode.MAGLEV=MagLev

BasicInfoView.txtChassis.text=Chassis:
BasicInfoView.txtChassis.tooltip=Units with the same chassis name are usually considered variants
BasicInfoView.txtModel.text=Model:
BasicInfoView.txtModel.tooltip=The name of this variant
BasicInfoView.txtYear.text=Year:
BasicInfoView.txtYear.tooltip=The year the unit was first built; this will determine what equipment is available
BasicInfoView.cbFaction.text=Faction:
BasicInfoView.cbFaction.tooltip=<html>New equipment may only be available to a limited number of factions until it becomes common.<br/>"Any" ignores faction restrictions.</html>
BasicInfoView.txtSource.text=Source/Era:
BasicInfoView.txtSource.tooltip=The published source of the unit and the game era.
BasicInfoView.cbTechBase.text=Tech Base:
BasicInfoView.cbTechBase.tooltip=Determines what equipment and construction options are available. Mixed tech allows use of equipment from the other tech base.
BasicInfoView.cbTechLevel.text=Tech Level:
BasicInfoView.cbTechLevel.tooltip=<html>Filter options by rules level.<br/>If using the variable tech level and game year options, the rules level is calculated using the game year instead of the intro year.</html>
BasicInfoView.txtManualBV.text=Manual BV:
BasicInfoView.txtManualBV.tooltip=Alternative to the calculated Battle Value.
BasicInfoView.cbTechBase.values=Inner Sphere,Clan,Mixed Inner Sphere,Mixed Clan

MekChassisView.baseType.values=Standard,Industrial,LAM,QuadVee
MekChassisView.motiveType.values=Biped,Quad,Tripod
MekChassisView.lamType.values=Standard,Bimodal
MekChassisView.qvType.values=Tracked,Wheeled
MekChassisView.primitiveType.values=Primitive,Primitive Industrial
MekChassisView.primitiveMotiveType.values=Biped,Quad
MekChassisView.spnTonnage.text=Tonnage:
MekChassisView.spnTonnage.tooltip=Value between 10 and 200 in 5 ton increments. Superheavy (over 100) is only available with IS/Advanced.
MekChassisView.chkOmni.text=Omni
MekChassisView.chkOmni.tooltip=Omni units mount equipment in pods that can be swapped quickly. Not available to Industrial or LAMs.
MekChassisView.cbBaseType.text=Base Type:
MekChassisView.cbBaseType.tooltip=<html>LAMs are only available to an IS tech base. QuadVees are only available to a Clan tech base.<br/>Resets unit except when switching between standard and industrial.</html>
MekChassisView.cbMotiveType.text=Motive Type:
MekChassisView.cbMotiveType.tooltip=<html>Determines number of legs.<br/>Resets unit.</html>
MekChassisView.cbMotiveType.LAM.tooltip=Standard can assume Mech, Fighter, or hybrid (AirMech) mode. Bimodal lacks AirMech mode.
MekChassisView.cbMotiveType.QuadVee.tooltip=Motive type in vehicle mode.
MekChassisView.cbStructure.text=Structure:
MekChassisView.cbStructure.tooltip=Material to use for the internal structure. Affects weight and available space.
MekChassisView.cbEngine.text=Engine:
MekChassisView.cbEngine.tooltip=<html>Type of engine determines cost, weight, and space.<br/>Other than primitives or industrials, non-fusion engines are only allowed at experimental rules level.<br/>Mechs require a fusion or fission engine to mount jump jets or UMU.</html>
MekChassisView.cbGyro.text=Gyro:
MekChassisView.cbGyro.tooltip=Type of gyro determines weight and space. Heavy-duty gyro can take more damage before being destroyed.
MekChassisView.cbCockpit.text=Cockpit:
MekChassisView.cbCockpit.tooltip=Type of cockpit determines weight, space, and location. Some cockpits grant special abilities.
MekChassisView.cbEnhancement.text=Enhancement:
MekChassisView.cbEnhancement.tooltip=Mutually incompatible types of myomer enhancements.
MekChassisView.cbEnhancement.null=None
MekChassisView.chkFullHeadEject.text=Full Head Ejection
MekChassisView.chkFullHeadEject.tooltip=System protects ejected pilot in hostile environment.
MekChassisView.btnResetChassis.text=Reset Chassis
MekChassisView.btnResetChassis.tooltip=Remove all pod-mounted equipment to strip unit down to base omni chassis.

CVChassisView.turrets.values=None,Single,Dual,Chin
CVChassisView.spnTonnage.text=Tonnage:
CVChassisView.spnTonnage.tooltip=Maximum tonnage varies with motive type.
CVChassisView.chkOmni.text=Omni
CVChassisView.chkOmni.tooltip=Omni units mount equipment in pods that can be swapped quickly.
CVChassisView.chkSuperheavy.text=Superheavy
CVChassisView.chkSuperheavy.tooltip=<html>Change vehicle type to superheavy.<br/>Resets non-VTOL units.</html>
CVChassisView.cbEngine.text=Engine:
CVChassisView.cbEngine.tooltip=Non-fusion or fission engines require power amplifiers for energy weapons. Fusion and fission engines require weight allocated to shielding.
CVChassisView.cbMotiveType.text=Motive Type:
CVChassisView.cbMotiveType.tooltip=Determines movement rules and engine size calculations. Switching to or from VTOL resets unit.
CVChassisView.cbTurrets.text=Turrets:
CVChassisView.cbTurrets.tooltip=Vehicles with turrets must allocate additional weight to weapons mounted in that turret. Advanced rules allow vehicles with two turrets or VTOLs with a chin turret.
CVChassisView.spnTurretWt.text=Base Chassis Turret 1 Weight:
CVChassisView.spnTurretWt.tooltip=Omni vehicles must determine the weight of the turret(s) as part of the base chassis configuration, limiting the weapon loadout in variants.
CVChassisView.spnTurret2Wt.text=Base Chassis Turret 2 Weight:
CVChassisView.spnTurret2Wt.tooltip=Omni vehicles must determine the weight of the turret(s) as part of the base chassis configuration, limiting the weapon loadout in variants.
CVChassisView.spnFixedTroop.text=Fixed Troop Space:
CVChassisView.spnFixedTroop.tooltip=Tonnage devoted to infantry transport.
CVChassisView.spnPodTroop.text=Pod Troop Space:
CVChassisView.spnPodTroop.tooltip=Pod space devoted to infantry transport.
CVChassisView.btnResetChassis.text=Reset Chassis
CVChassisView.btnResetChassis.tooltip=Remove all pod-mounted equipment and troop space to strip unit down to base omni chassis.

FighterChassisView.spnTonnage.text=Tonnage:
FighterChassisView.spnTonnage.tooltip=Value between 5 and 100 in 5 ton increments. Conventional fighters are limited to 50 tons.
FighterChassisView.chkOmni.text=Omni
FighterChassisView.chkOmni.tooltip=Omni units mount equipment in pods that can be swapped quickly. Not available to conventional fighters.
FighterChassisView.txtSI.text=SI:
FighterChassisView.txtSI.tooltip=Structural integrity is based on fighter tonnage and speed.
FighterChassisView.chkVSTOL.text=VSTOL
FighterChassisView.chkVSTOL.tooltip=Very Short Take Off and Landing, automatic for aerospace fighter.
FighterChassisView.cbFighterType.text=Type:
FighterChassisView.cbFighterType.tooltip=Aerospace fighters can function on atmospheric and space maps. Conventional fighters are limited to atmospheric.
FighterChassisView.cbFighterType.values=Aerospace,Conventional
FighterChassisView.cbEngine.text=Engine:
FighterChassisView.cbEngine.tooltip=Type of engine determines cost and weight. Light, XL, XXL, or large engines take up weapon slots in the tail of conventional fighters.
FighterChassisView.cbCockpit.text=Cockpit:
FighterChassisView.cbCockpit.tooltip=Cockpit type determines cost and weight of cockpit.
FighterChassisView.btnResetChassis.text=Reset Chassis
FighterChassisView.btnResetChassis.tooltip=Remove all pod-mounted equipment and troop space to strip unit down to base omni chassis.

DropshipChassisView.spnTonnage.text=Tonnage:
DropshipChassisView.spnTonnage.tooltip=<html>Small Craft range 100-200 tons in 5 ton increments.<br/>Aerodyne Dropships range 200-35,000 tons in 100-ton increments.<br/>Spheroid Dropships range 200-100,000 tons in 100-ton increments.</html>
DropshipChassisView.chkFunction.text=Military
DropshipChassisView.chkFunction.tooltip=<html>Whether a Small Craft or Dropship is constructed as a civilian or military unit<br/>affects fuel usage and crew requirements.</html>
DropshipChassisView.chkKFBoom.text=KF-Boom
DropshipChassisView.chkKFBoom.tooltip=A Dropship without a KF-Boom can still dock to Jumpships but cannot be carried through hyperspace.
DropshipChassisView.cbBaseType.text=Vessel Type:
DropshipChassisView.cbBaseType.tooltip=The type of unit being constructed.
DropshipChassisView.cbBaseType.values=Small Craft,Dropship
DropshipChassisView.cbChassisType.text=Shape:
DropshipChassisView.cbChassisType.tooltip=Aerodyne craft have better handling in an atmosphere while spheroids make more efficient use of armor and structure tonnage.
DropshipChassisView.cbChassisType.values=Aerodyne,Spheroid
DropshipChassisView.spnSI.text=Structural Integrity:
DropshipChassisView.spnSI.tooltip=The structural integrity determines the maximum armor that can be mounted.

BAChassisView.cbChassisType.text=Body Type:
BAChassisView.cbChassisType.tooltip=Humanoid (biped) chassis can mount manipulators in the arms and use non-ground movement. Quad chassis are faster.
BAChassisView.cbBodyType.values=Humanoid,Quad
BAChassisView.cbWeightClass.text=Weight Class:
BAChassisView.cbWeightClass.tooltip=Weight class determines maximum component weight and the weight cost of movement systems.
BAChassisView.spnSquadSize.text=Squad Size:
BAChassisView.spnSquadSize.tooltip=The number of troopers in the unit.
BAChassisView.cbTurretType.text=Turret Type:
BAChassisView.cbTurretType.tooltip=<html>Quad chassis can add a turret to increase the space available for equipment at the cost of extra weight.<br/>A modular turret weighs more but allows reconfiguration like an omni unit.</html>
BAChassisView.cbTurretType.values=None,Standard,Modular
BAChassisView.spnTurretSize.text=Turret Size:
BAChassisView.spnTurretSize.tooltip=The number of additional critical slots available in the turret. The weight of the turret increases with its size.
BAChassisView.chkExoskeleton.text=Exoskeleton
BAChassisView.chkExoskeleton.tooltip=The lightest weight class can be designated as industrial exoskeletons.
BAChassisView.chkHarjel.text=Harjel
BAChassisView.chkHarjel.tooltip=Clan exoskeletons may be constructed with a lighter chassis that does not include Harjel.

HeatSinkView.mechNames.values=Single,IS Double,Clan Double,Compact,Laser,Double (Prototype),Double(Freezer)
HeatSinkView.aeroNames.values=Single,Double
HeatSinkView.cbHSType.text=Type:
HeatSinkView.cbHSType.tooltip=Type determines weight, space, and heat dissipation abilities. All heat sinks on the unit must be of the same type.
HeatSinkView.spnCount.text=Number:
HeatSinkView.spnCount.tooltip=The total number of heat sinks on the unit. Some heat sinks are integral to fusion (10), fission (5), and fuel cell engines (1) at no additional weight.
HeatSinkView.spnBaseCount.text=Base (Omni):
HeatSinkView.spnBaseCount.tooltip=The number of heat sinks that are part of the base chassis configuration.
HeatSinkView.lblCritFree.text=Engine Free:
HeatSinkView.lblCritFree.tooltip=<html>These heat sinks are an integral part of the engine and do not have to be assigned critical space.<br/>Omni units must assign critical space to any pod-mounted heat sinks even if they would be part of the engine in standard Mechs.</html>
HeatSinkView.lblWeightFree.text=Weight Free:
HeatSinkView.lblWeightFree.tooltip=<html>These heat sinks are included in the weight of the engine.</html>

ArmorView.cbArmorType.text=Armor Type:
ArmorView.cbArmorType.tooltip=The type of armor determines the amount of protection per ton and the amount of space required. Some armors provide additional special abilities.
ArmorView.spnTonnage.text=Armor Tonnage:
ArmorView.spnTonnage.tooltip=The total weight of all the unit's armor.
ArmorView.btnMaximize.text=Maximize Armor
ArmorView.btnMaximize.tooltip=Use the maximum amount of armor allowed for this unit.
ArmorView.btnRemaining.text=Use Remaining Tonnage
ArmorView.btnRemaining.tooltip=Use all remaining unallocated tonnage for armor, up to the maximum allowed for the unit.
ArmorView.spnArmorPoints.text=Points:
ArmorView.spnArmorPoints.tooltip=The number of points of armor for the unit.

ArmorLocationView.lblRear.text=Rear
ArmorLocationView.lblMax.format=Max: %d

ArmorAllocationView.txtUnallocated.text=Unallocated Armor Points:
ArmorAllocationView.txtAllocated.text=Allocated Armor Points:
ArmorAllocationView.txtTotal.text=Total Armor Points:
ArmorAllocationView.txtMaxPossible.text=Maximum Possible Armor Points:
ArmorAllocationView.txtWasted.text=Wasted Armor Points:
ArmorAllocationView.panPatwork.title=Patchwork
ArmorAllocationView.locationTooltip.format=<html>Points per ton: %.2f<br/>Current tonnage: %.3f</html>
ArmorAllocationView.btnAutoAllocate.text=Auto-Allocate Armor
ArmorAllocationView.txtPointsPerTon.text=Points Per Ton:
ArmorAllocationView.txtPointsPerTon.tooltip=The number of armor points provided by one ton of this armor.

MovementView.lblBase.text=Base
MovementView.lblFinal.text=Final
MovementView.lblWalk.values=Walk MP:,Cruise MP:,Safe Thrust:,Walk MP:
MovementView.spnWalk.tooltip=The base walk/cruise/safe thrust value.
MovementView.txtWalkFinal.tooltip=The walk/cruise/safe thrust value modified by movement-restricting equipment.
MovementView.lblRun.values=Run MP:,Flank MP:,Max Thrust:,?
MovementView.txtRunBase.tooltip=The base run/flank/max thrust value.
MovementView.txtRunFinal.tooltip=The run/flank/max thrush value modified by movement-restricting or enhancing equipment.
MovementView.spnJump.tooltip=The base MP for non-ground movement, such as jump, underwater (UMU), or VTOL.
MovementView.txtJumpFinal.tooltip=Non-ground MP modified by equipment.
MovementView.lblJump.values=Jump/UMU MP:,Jump MP:,?,Jump/VTOL/UMU:
MovementView.cbJumpType.text=Jump Type:
MovementView.cbJumpType.tooltip=Non-ground movement equipment.
MovementView.cbJumpType.null=None

AeroFuelView.spnFuel.text=Fuel Tonnage:
AeroFuelView.spnFuel.tooltip=The amount of tonnage allocated to fuel storage.
AeroFuelView.lblFuelPoints.text=Fuel Points:
AeroFuelView.lblFuelPoints.tooltip=The number of fuel points provided by the allocated fuel.
AeroFuelView.lblTurnsAtSafe.text=Turns at Safe:
AeroFuelView.lblTurnsAtSafe.tooltip=The number of game turns the aircraft can operate at safe thrust before expending fuel.
AeroFuelView.lblTurnsAtMax.text=Turns at Max:
AeroFuelView.lblTurnsAtMax.tooltip=The number of game turns the aircraft can operate at maximum thrust before expending fuel.
AeroFuelView.lblBurnDays1G.text=Burn Days 1G:
AeroFuelView.lblBurnDays1G.tooltip=The number of days the craft can operate at 1G acceleration.
AeroFuelView.lblBurnDaysMax.text=Burn Days Max:
AeroFuelView.lblBurnDaysMax.tooltip=The number of days the craft can operate at maximum acceleration.

PlatoonTypeView.cbMotiveType.values=Foot,Jump,Motorized,Mechanized (Hover),Mechanized (Tracked),Mechanized (Wheeled),VTOL (Micro-copter),VTOL (Microlite),SCUBA (Foot),SCUBA (Motorized),SCUBA (Mechanized)
PlatoonTypeView.cbMotiveType.text=Motive Type:
PlatoonTypeView.cbMotiveType.tooltip=Determines MP, movement mode, and maximum platoon and squad size.
PlatoonTypeView.spnNumSquads.text=# Squads:
PlatoonTypeView.spnNumSquads.tooltip=The number of squads in the platoon.
PlatoonTypeView.spnSquadSize.text=Squad Size:
PlatoonTypeView.spnSquadSize.tooltip=The number of soldiers in each squad.
PlatoonTypeView.lblMaxSize.text=Max Platoon Size:
PlatoonTypeView.lblMaxSize.tooltip=The maximum size for the platoon, determined by motive type and specialization.
PlatoonTypeView.lblMaxSquadSize.text=Max Squad Size:
PlatoonTypeView.lblMaxSquadSize.tooltip=The maximum size for each squad, determined by motive type and specialization.

InfantryWeaponView.txtGuns.badMotive=Invalid Motive Type
InfantryWeaponView.none=None
InfantryWeaponView.txtPrimary.text=Primary:
InfantryWeaponView.txtPrimary.tooltip=The primary weapon used by the unit.
InfantryWeaponView.txtSecondary.text=Secondary:
InfantryWeaponView.txtSecondary.tooltip=Optional secondary weapon carried by one or more soldiers in each squad.
InfantryWeaponView.txtGuns.text=Field Gun:
InfantryWeaponView.txtGuns.tooltip=<html>Optional field gun or field artillery piece (Advanced).<br/>Requires Motorized, Mechanized (Tracked), or Mechanized (Wheeled) motive type.</html>
InfantryWeaponView.cbNumSecondary.text=# Secondary:
InfantryWeaponView.cbNumSecondary.tooltip=The number of secondary weapons per squad. Limited by the weapon's crew rating.
InfantryWeaponView.cbNumGuns.text=# Field Guns:
InfantryWeaponView.cbNumGuns.tooltip=The number of field guns deployed by the unit. Limited by platoon size and gun tonnage. Artillery is limited to one weapon per platoon.
InfantryWeaponView.chkAntiMek.text=Anti-Mek Training:
InfantryWeaponView.chkAntiMek.tooltip=A unit with anti-mek training has a higher platoon tonnage due to special equipment.

BAEnhancementView.chkPartialWing.text=Partial Wing
BAEnhancementView.chkPartialWing.tooltip=Increases jump MP when used in an atmosphere. IS tech base only.
BAEnhancementView.chkJumpBooster.text=Jump Booster
BAEnhancementView.chkJumpBooster.tooltip=Increases jump MP.
BAEnhancementView.chkMechJumpBooster.text=Mechanical Jump Booster
BAEnhancementView.chkMechJumpBooster.tooltip=Provides one jump MP apart from any other movement mode, may be used underwater.
BAEnhancementView.chkMyomerBooster.text=Myomer Booster
BAEnhancementView.chkMyomerBooster.tooltip=Increases ground MP. Clan tech base only.

DropshipCriticalView.aerodyneArcs.values=Nose,Left Wing,Right Wing,Aft
DropshipCriticalView.spheroidArcs.values=Nose,Forward Left,Foreward Right,Aft,Aft Left,Aft Right
DropshipCriticalView.lblSlotCount.text=Slots used:
DropshipCriticalView.lblSlotCount.tooltip=The number of slots in this arc occupied by weapons
DropshipCriticalView.lblMaxSlots.format=Weight-free allowed: %d
DropshipCriticalView.lblMaxSlots.tooltip=Exceeding this number requires additional tonnage for fire control and power distribution systems.
DropshipCriticalView.lblExtraWeight.text=Extra tonnage:
DropshipCriticalView.lblExtraWeight.tooltip=The additional weight required for exceeding the base number of weapon in this arc.

AerospaceCrewView.spnOfficers.text=Officers:
AerospaceCrewView.spnOfficers.tooltip=<html>At least one in five crew members (not including marines and bay personnel) is typically considered an officer (rounded up).<br/>The officers are counted among the total crew rather than additional personnel.
AerospaceCrewView.spnBaseCrew.text=Base Crew:
AerospaceCrewView.spnBaseCrew.tooltip=The number of crew required to run the vessel. Does not include gunners, marines, bay personnel, or passengers.
AerospaceCrewView.spnGunners.text=Gunners:
AerospaceCrewView.spnGunners.tooltip=Minimum of one per each capital weapon or each six standard-scale weapons.
AerospaceCrewView.lblTotalCrew.text=Total Crew:
AerospaceCrewView.lblTotalCrew.tooltip=The standard crew size for vessel operations. Does not include bay personnel, passengers, or marines.
AerospaceCrewView.lblBayPersonnel.text=Bay Personnel:
AerospaceCrewView.lblBayPersonnel.tooltip=The additional crew capacity provided by transport bays.
AerospaceCrewView.spnPassengers.text=Passengers:
AerospaceCrewView.spnPassengers.tooltip=Passenger capacity. Not counted among crew, but must be allocated quarters.
AerospaceCrewView.spnMarines.text=Marines:
AerospaceCrewView.spnMarines.tooltip=Defends vessel against boarding actions. Do not count toward officer requirements, but must be allocated quarters.
AerospaceCrewView.spnBAMarines.text=BA Marines:
AerospaceCrewView.spnBAMarines.tooltip=BattleArmored marines.
AerospaceCrewView.btnAssignQuarters.text=Auto-Assign Quarters
AerospaceCrewView.btnAssignQuarters.tooltip=Assigns officer quarters for officers, standard crew quarters for remaining crew, and second-class quarters for passengers.
AerospaceCrewView.lblQuarters.text=Quarters
AerospaceCrewView.spnQuartersFirstClass.text=First Class/Officer:
AerospaceCrewView.spnQuartersFirstClass.tooltip=Quarters for officers or luxury suite for first class passengers. 10 tons each.
AerospaceCrewView.spnQuartersStandard.text=Standard:
AerospaceCrewView.spnQuartersStandard.tooltip=Standard crew quarters. 7 tons each.
AerospaceCrewView.spnQuartersSecondClass.text=Second Class:
AerospaceCrewView.spnQuartersSecondClass.tooltip=Standard suite for second class passengers. 7 tons each.
AerospaceCrewView.spnQuartersSteerage.text=Steerage:
AerospaceCrewView.spnQuartersSteerage.tooltip=Basic room for crew or passenger. 5 tons each.
AerospaceCrewView.spnLifeBoats.text=Life Boats:
AerospaceCrewView.spnLifeBoats.tooltip=Designed to keep six passengers alive for up to a month in space.
AerospaceCrewView.spnEscapePods.text=Escape Pods:
AerospaceCrewView.spnEscapePods.tooltip=Designed to transport six passengers to a planetary surface in an emergency.
