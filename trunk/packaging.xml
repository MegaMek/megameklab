<?xml version="1.0"?>
<!-- Author: Jay Lawson -->
<!-- This is a packaging build file for MegaMekLab that will package      -->
<!-- the following OS-specific releases.                                  -->       
<!--     a) An OS X bundled release					                      -->
<!--     b) A Windows release with the EXE file using launch4j            -->
<!--     c) A "unix" release containing only jars                         -->
<!--     d) A source-file only release to comply with GPL                 --> 
<!-- Unlike the packaging routine for MHQ, we will not package a separate -->
<!-- executable MegaMek copy in the OSX and Windows version, but rather   -->
<!-- "bundle" it (and TinyXML.jar) into the MML.jar. This is              -->
<!-- to discourage users from trying to "update" their MM.jar which       -->
<!-- can cause problems. So The MML executable can still be put into a    -->
<!-- megamek directory to take advantage of existing mechfiles, fluff     -->
<!-- images and the like, but it will not utilize the MM.jar that is      --> 
<!-- contained in that directory.                                         -->

<project default="release" name="MegaMekLab" basedir=".">

	<!-- Global properties for this build -->
	<!-- Version and packaging properties -->
	<property name="project.name" value="megameklab" />

	<property name="srcdir" value="src" />
	<property name="logdir" value="logs" />
	<property name="builddir" value="classes" />
	<property name="libdir" value="lib" />
	<property name="datadir" value="data" />
	<property name="docdir" value="docs" />
	<property name="svndir" value="svndev" />
	<property name="util" value="packaging_utils" />
	
	<!-- same as builddir but under svn -->
	<property name="svnbuilddir" value="${svndir}/${builddir}" />

	<!-- svnroot used for svn authentification -->
	<property name="svnroot" value="svn://svn.code.sf.net/p/megameklab/code/trunk" />
	<property name="svnmechdata" value="svn://svn.code.sf.net/p/megamek/code/trunk/megamek/data/mechfiles" />

	<property name="timestampfile" value="${logdir}/timestamp" />
	<property name="TinyXMLsrc" value="TinyXML07-src.zip" />

	<!-- Name of the target jarfile and the class containing the main-Method -->
	<property name="jarfile" value="MegaMekLab.jar" />
	<property name="jarmainclass" value="megameklab.com.MegaMekLab" />

	<!-- This is the relative path to the 'data' directory -->
	<property name="dataclasspath" value="." />
	
	<condition property="isOsUnixLike">
		<os family="unix" />
	</condition>

	<condition property="isOsWindows">
		<os family="windows" />
	</condition>
	
	<condition property="isOsUnixNotMac">
		<and>
			<os family="unix" />
			<not>
				<os family="mac"/>
			</not>
		</and>
	</condition>
	
	<condition property="isOsMac">
		<os family="mac" />
	</condition>
	

	<!-- if we're using a Mac then we'll use the launch4j for Mac OS -->
    <target name="checkOSMac" if="isOsMac">
        <taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${util}/launch4j/launch4j.jar:${util}/launch4j/lib/xstream.jar" />
    </target>

    <!-- if we're using Windows then we use the launch4j for Windows -->
    <target name="checkOSWindows" if="isOsWindows">
            <taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${util}/launch4j/launch4j.jar:${util}/launch4j/lib/xstream.jar" />
    </target>

    <!-- if we're using UNIX or Linux then we'll use the launch4j for Linux -->
    <target name="checkOSUNIX" if="isOsUnixNotMac">
        <taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${util}/linux/launch4j/launch4j.jar:${util}/linux/launch4j/lib/xstream.jar" />
    </target>

    <target name="svndev-init" depends="checkOSMac, checkOSWindows, checkOSUNIX">
		<tstamp />
		<delete dir="${svndir}" />
	    <input message="Please enter version number (eg. 0.1.22):" addproperty="version"/>
	    <property name="osxdist" value="${project.name}-${version}-mac" />
	    <property name="windist" value="${project.name}-${version}-windows" />
	    <property name="nixdist" value="${project.name}-${version}" />
	    <property name="srcdist" value="${project.name}-${version}-source" />
	</target>
	
	<!-- following svndev-* tasks get, build & package the current version from svn -->
	<target name="svndev-get" depends="svndev-init" description="get the latest source from SVN">
		<exec executable="svn">
			<arg line="export ${svnroot} ${svndir}" />
		</exec>
		<exec executable="svn">
			<arg line="export ${svnmechdata} ${svndir}/${datadir}/mechfiles" />
		</exec>
		<zip zipfile="${svndir}/${datadir}/mechfiles/battlearmor.zip" basedir="${svndir}/${datadir}/mechfiles/battlearmor"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/convfighter.zip" basedir="${svndir}/${datadir}/mechfiles/convfighter"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/dropships.zip" basedir="${svndir}/${datadir}/mechfiles/dropship"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/fighters.zip" basedir="${svndir}/${datadir}/mechfiles/fighters"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/ge.zip" basedir="${svndir}/${datadir}/mechfiles/ge"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/infantry.zip" basedir="${svndir}/${datadir}/mechfiles/infantry"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/jumpships.zip" basedir="${svndir}/${datadir}/mechfiles/jumpships"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/mechs.zip" basedir="${svndir}/${datadir}/mechfiles/mechs"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/protomechs.zip" basedir="${svndir}/${datadir}/mechfiles/protomechs"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/smallcraft.zip" basedir="${svndir}/${datadir}/mechfiles/smallcraft"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/spacestation.zip" basedir="${svndir}/${datadir}/mechfiles/spacestation"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/unofficial.zip" basedir="${svndir}/${datadir}/mechfiles/unofficial"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/vehicles.zip" basedir="${svndir}/${datadir}/mechfiles/vehicles"/>
		<zip zipfile="${svndir}/${datadir}/mechfiles/warship.zip" basedir="${svndir}/${datadir}/mechfiles/warship"/>
		<delete dir="${svndir}/${datadir}/mechfiles/battlearmor"/>
		<delete dir="${svndir}/${datadir}/mechfiles/convfighter"/>
		<delete dir="${svndir}/${datadir}/mechfiles/dropship"/>
		<delete dir="${svndir}/${datadir}/mechfiles/fighters"/>
		<delete dir="${svndir}/${datadir}/mechfiles/ge"/>
		<delete dir="${svndir}/${datadir}/mechfiles/infantry"/>
		<delete dir="${svndir}/${datadir}/mechfiles/jumpships"/>
		<delete dir="${svndir}/${datadir}/mechfiles/mechs"/>
		<delete dir="${svndir}/${datadir}/mechfiles/protomechs"/>
		<delete dir="${svndir}/${datadir}/mechfiles/smallcraft"/>
		<delete dir="${svndir}/${datadir}/mechfiles/spacestation"/>
		<delete dir="${svndir}/${datadir}/mechfiles/unofficial"/>
		<delete dir="${svndir}/${datadir}/mechfiles/vehicles"/>
		<delete dir="${svndir}/${datadir}/mechfiles/warship"/>
	</target>
	
	<target name="svndev-build" depends="svndev-get" description="compile project from SVN and generate JAR file" >
		<mkdir dir="${svnbuilddir}" />
		<!-- compile -->
		<echo message="MegaMekLab" />
		<javac debug="true" debuglevel="lines,source" target="1.6" source="1.6" destdir="${svnbuilddir}" srcdir="${svndir}/${srcdir}" memoryInitialSize="512m" memoryMaximumSize="1024m" fork="true">
			<classpath>
				<pathelement location="${svndir}" />
				<fileset dir="${svndir}/${libdir}" includes="*.jar" />
				<fileset dir="${svndir}" includes="MegaMek.jar" />
			</classpath>
		</javac>

		<jar destfile="${svndir}/${jarfile}" basedir="${svnbuilddir}">
			<fileset dir="${svndir}/${srcdir}" includes="**/*.properties"/>
		    <zipgroupfileset dir="${svndir}/${libdir}" includes="*.jar"/>
		    <zipgroupfileset dir="${svndir}" includes="MegaMek.jar"/>
		    <manifest>
		    	<attribute name="Main-Class" value="megameklab.com.MegaMekLab"/> 
		    </manifest>
		</jar>
		
		<!-- Ensure that the log directory exists. -->
		<mkdir dir="${svndir}/${logdir}" />
		<touch file="${svndir}/${timestampfile}" />	
	</target>
			
	<target name="svndev-clean" description="remove the SVN build directory">
		<delete dir="${svnbuilddir}" />
	</target>
	
	<target name="mac-bundle" description="Bundle the project built from SVN into an Mac OSX distribution">
		<mkdir dir="${osxdist}" />
		<copy todir="${osxdist}">
			<fileset dir="${svndir}" >
				<include name="${jarfile}" />
				<include name="${logdir}/" />
				<include name="${datadir}/" />
				<include name="${docdir}/" />
			</fileset>
		</copy>
		<mkdir dir="${osxdist}/MegaMekLab.app" />
		<copy todir="${osxdist}/MegaMekLab.app">
			<fileset dir="${util}/MegaMekLab.app" >
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy file="${util}/JavaApplicationStub" todir="${osxdist}/MegaMekLab.app/Contents/MacOS/"/>
		<move file="${osxdist}/MegaMekLab.jar" todir="${osxdist}/MegaMekLab.app/Contents/Resources/Java/" />
	</target>
	
	<!-- Replace actual stubs with symlinks on mac systems -->
	<target name="mac-stub" if="isOsMac" description="Create a dmg file from the OS X distribution (NOTE: only works on OSX)">
		<delete file="${osxdist}/MegaMekLab.app/Contents/MacOS/JavaApplicationStub" />
		<exec executable="ln">
			<arg line="-s /System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub" />
			<arg value="${osxdist}/MegaMekLab.app/Contents/MacOS/JavaApplicationStub" />
		</exec>
	</target>
			
	<target name="mac-zip">
	    <tar destfile="${osxdist}.tar.bz2" compression="bzip2" longfile="gnu">
	    	<tarfileset dir="${osxdist}" mode="755" />
	    </tar>
	</target>
	
	<target name="mac-tar" depends="mac-stub,mac-zip" description="Create a compressed tar file of the OS X distribution"/>
	
	<target name="mac-clean">
		<delete dir="${osxdist}" />
	</target>
	
	<target name="mac-package" depends="mac-bundle, mac-tar, mac-clean" description="Package a Mac OS X distribution of the project built from SVN" />
	
	<target name="nix-bundle" description="Bundle the project built from SVN into a unix distribution">
		<mkdir dir="${nixdist}" />
		<mkdir dir="${nixdist}/${nixdist}" />
		<copy todir="${nixdist}/${nixdist}">
			<fileset dir="${svndir}" >
				<include name="${jarfile}" />
				<include name="${logdir}/" />
				<include name="${datadir}/" />
				<include name="${docdir}/" />
			</fileset>
		</copy>
	</target>
	
	<target name="nix-tar" description="Create a compressed tar file of the unix distribution">
		<tar destfile="${nixdist}.tar.gz" basedir="${nixdist}" compression="gzip" longfile="gnu" />
	</target>
	
	<target name="nix-clean">
		<delete dir="${nixdist}" />
	</target>
		
	<target name="nix-package" depends="nix-bundle, nix-tar, nix-clean" description="Package a Unix distribution of the project built from SVN"/>
	
	<!-- Produce an EXE file -->
	<target name="exe" description="Generate an EXE wrappers for MegaMekLab.jar">
		<launch4j configFile="${util}/megameklab.4j.xml" />
	</target>
	
	<target name="win-bundle" depends="exe" description="Bundle the project built from SVN into a Windows distribution">
		<mkdir dir="${windist}" />
		<copy todir="${windist}">
			<fileset dir="${svndir}" >
				<include name="${logdir}/" />
				<include name="${datadir}/" />
				<include name="${docdir}/" />
				<include name="MegaMekLab.exe" />
			</fileset>
		</copy>
		<copy file="${util}/megameklab.l4j.ini" todir="${windist}"/>
	</target>
	
	<target name="win-zip" description="Create a zipfile of the Windows distribution">
		<zip zipfile="${basedir}/${windist}.zip" basedir="${windist}"  />
	</target>
		
	<target name="win-clean">
		<delete dir="${windist}" />
	</target>
			
	<target name="win-package" depends="win-bundle, win-zip, win-clean" description="Package a Windows distribution of the project built from SVN"/>
	
	<target name="source-package" description="Package a source-only distribution of the project built from SVN">
		<mkdir dir="${srcdist}" />
		<mkdir dir="${srcdist}/${srcdist}" />
		<copy todir="${srcdist}/${srcdist}">
			<fileset dir="${svndir}" >
				<exclude name="${builddir}/**"/>
				<exclude name="MegaMekLab.jar"/>
				<exclude name="MegaMekLab.exe"/>
			</fileset>
		</copy>
		<tar destfile="${srcdist}.tar.gz" basedir="${srcdist}" compression="gzip"  longfile="gnu">
		</tar>
	</target>
	
	<target name="release" depends="svndev-build, mac-package, nix-package, win-package, source-package, svndev-clean" description="Build the project from SVN and package it as Windows, Mac, Unix, and source-only" />
	
</project>
